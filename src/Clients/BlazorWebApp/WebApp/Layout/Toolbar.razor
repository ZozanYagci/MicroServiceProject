@if (isLoggedIn)
{
    <a href="basket" class="ml-md-auto">@identityService.GetUserName() - Basket (@basketItemCount)</a>
    <a class="ml-md-auto" onclick="@GoLogoutPage">Logout</a>
}
else
{
    <a class="ml-md-auto" onclick="@GoLoginPage">Login</a>
}

@code {

    [Inject]
    IBasketService basketService { get; set; }

    [Inject]
    IIdentityService identityService { get; set; }

    [Inject]
    NavigationManager navigationManager { get; set; }

    private int basketItemCount = 0;
    bool isLoggedIn = false;


    protected override async Task OnInitializedAsync()
    {
        await calculateItemCount();
    }

    private async Task<int> calculateItemCount(){
        isLoggedIn = identityService.IsLoggedIn;

        if (!isLoggedIn)
            return 0;

        var basket = await basketService.GetBasket();
        var count = basket.Items == null ? 0 : basket.Items.Sum(i => i.Quantity);

        basketItemCount = count;
        return count;
    }


    private void GoLoginPage()
    {
        navigationManager.NavigateTo($"login?returnUrl={Uri.EscapeDataString(navigationManager.Uri)}", true);
    }

    private void GoLogoutPage()
    {
        navigationManager.NavigateTo($"logout?returnUrl={Uri.EscapeDataString(navigationManager.Uri)}", true);
    }
}
